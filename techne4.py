# -*- coding: utf-8 -*-
"""techne4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KX0jaf-DX69_Gv417NkIkCmx059nZg6l
"""

class HealthParams:
    def __init__(self, value):
        self.value = value
        self.next = None

class HealthVitalsLinkedList:
    def __init__(self):
        self.head = None

    def append(self, value):
        new_node = HealthParams(value)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

def get_float_input(prompt):
    while True:
        try:
            value = float(input(prompt))
            return value
        except ValueError:
            print("Invalid input. Please enter a valid number.")

def main():
    heart_rate_list = HealthVitalsLinkedList()
    sleep_duration_list = HealthVitalsLinkedList()
    systolic_bp_list = HealthVitalsLinkedList()
    diastolic_bp_list = HealthVitalsLinkedList()
    stress_level_list = HealthVitalsLinkedList()
    fitness_score_list = HealthVitalsLinkedList()

    while True:
        heart_rate = get_float_input("Enter Heart Rate: ")
        sleep_duration = get_float_input("Enter Sleep Duration: ")
        systolic_bp = get_float_input("Enter Systolic Blood Pressure: ")
        diastolic_bp = get_float_input("Enter Diastolic Blood Pressure: ")
        stress_level = get_float_input("Enter Stress Level: ")
        fitness_score = get_float_input("Enter Fitness Score: ")

        heart_rate_list.append(heart_rate)
        sleep_duration_list.append(sleep_duration)
        systolic_bp_list.append(systolic_bp)
        diastolic_bp_list.append(diastolic_bp)
        stress_level_list.append(stress_level)
        fitness_score_list.append(fitness_score)

        choice = input("Do you want to enter more health parameters? (y/n): ")
        if choice.lower() != 'y':
            break

    # Display the linked lists for each health vital
    def display_linked_list(linked_list, health_vital_name):
        current = linked_list.head
        while current:
            print(f"{health_vital_name}: {current.value}")
            current = current.next
        print()

    display_linked_list(heart_rate_list, "Heart Rate")
    display_linked_list(sleep_duration_list, "Sleep Duration")
    display_linked_list(systolic_bp_list, "Systolic Blood Pressure")
    display_linked_list(diastolic_bp_list, "Diastolic Blood Pressure")
    display_linked_list(stress_level_list, "Stress Level")
    display_linked_list(fitness_score_list, "Fitness Score")

if __name__ == "__main__":
    main()

class HealthParams:
    def __init__(self, value):
        self.value = value
        self.next = None

class HealthVitalsLinkedList:
    def __init__(self):
        self.head = None

    def append(self, value):
        new_node = HealthParams(value)
        if self.head is None:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    def prepend(self, value):
        new_node = HealthParams(value)
        new_node.next = self.head
        self.head = new_node

    def display_linked_list(self):
        current_node = self.head
        while current_node:
            print(current_node.value, end=" -> ")
            current_node = current_node.next
        print("None")

def get_float_input(prompt):
    while True:
        try:
            value = float(input(prompt))
            return value
        except ValueError:
            print("Invalid input. Please enter a valid number.")

def main():
    heart_rate_list = HealthVitalsLinkedList()
    sleep_duration_list = HealthVitalsLinkedList()
    systolic_bp_list = HealthVitalsLinkedList()
    diastolic_bp_list = HealthVitalsLinkedList()
    stress_level_list = HealthVitalsLinkedList()
    fitness_score_list = HealthVitalsLinkedList()

    while True:
        heart_rate = get_float_input("Enter Heart Rate: ")
        sleep_duration = get_float_input("Enter Sleep Duration: ")
        systolic_bp = get_float_input("Enter Systolic Blood Pressure: ")
        diastolic_bp = get_float_input("Enter Diastolic Blood Pressure: ")
        stress_level = get_float_input("Enter Stress Level: ")
        fitness_score = get_float_input("Enter Fitness Score: ")

        heart_rate_list.prepend(heart_rate)
        sleep_duration_list.prepend(sleep_duration)
        systolic_bp_list.prepend(systolic_bp)
        diastolic_bp_list.prepend(diastolic_bp)
        stress_level_list.prepend(stress_level)
        fitness_score_list.prepend(fitness_score)

        more_entries = input("Do you want to enter more health parameters? (y/n): ")
        if more_entries.lower() != 'y':
            break

    print("Heart Rate Linked List:")
    heart_rate_list.display_linked_list()

    print("Sleep Duration Linked List:")
    sleep_duration_list.display_linked_list()

    print("Systolic Blood Pressure Linked List:")
    systolic_bp_list.display_linked_list()

    print("Diastolic Blood Pressure Linked List:")
    diastolic_bp_list.display_linked_list()

    print("Stress Level Linked List:")
    stress_level_list.display_linked_list()

    print("Fitness Score Linked List:")
    fitness_score_list.display_linked_list()

if __name__ == "__main__":
    main()

#add constraints for each health vital